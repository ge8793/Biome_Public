######## PROJECT: Running MR analysis between gut microbial trait abundances/presence and absence and Breast Cancer (from BCAC) with FGFP data
######## Script: Grace Edmunds, adapted from Kaitlin Wade Performing MR analysis with FGFP abundances as exposure 
######## Date: 19/10/20

## clearworkspace
rm(list = ls())

### INSTALL PACKAGES 
# install.packages("devtools")
# install.packages("remotes")
# remotes::install_github("MRCIEU/TwoSampleMR")
# devtools::install_github("MRCIEU/MRInstruments")
#install.packages("plyr")
#install.packages("dplyr")
#install.packages("ggplot2")
#install.packages("xlsx")
#install.packages("png")
#install.packages("ggrepel")
#install.packages("ggthemes")
#install.packages("calibrate")
#install.packages("data.table")
#install.packages("stringr")
library(stringr)
library(data.table)
library(calibrate)
library(ggrepel)
library(ggthemes)
library(devtools)
library(TwoSampleMR)
library(MRInstruments)
library(xlsx)
library(plyr) 
library(dplyr)
library(ggplot2)
library(png)
library(tidyr)
library(forestplot)

###Check the required tools are working as expected 

##check the package is installed 
# devtools::install_github("mrcieu/ieugwasr")

##check you have an access token
ieugwasr::check_access_token()

#if not working, reset email in googleauth
# gar_auth(email = "myemail")

##get an access token if you do not have one
# ieugwasr::get_access_token

##Use this token to see some available outcome data, to confirm it is working 
ao <- available_outcomes()

### Prepare environment

## get working directiory
getwd()

## if incorrect - set working directory 
setwd("mywd")


#########################################
## PREPARING GUT MICROBIOME GWAS FILES AS EXPOSURE DATA ##
#########################################
#NB: The bugs specified are those that are presented in Supplementary table S1 of the paper

#Assign names to run analyses with
bugs <- c("C_Gammaproteobacteria_RNT","F_Sutterellaceae_HB","G_Bifidobacterium_RNT","G_Butyricicoccus_RNT","G_Dialister_HB","G_Parabacteroides_RNT",
          "G_Ruminococcus_HB","G_unclassified_F_Erysipelotrichaceae_HB","G_unclassified_F_Porphyromonadaceae_RNT","G_unclassified_O_Bacteroidales_HB","G_unclassified_P_Firmicutes_HB",
          "G_unclassified_P_Firmicutes_RNT","G_Veillonella_HB","G_Coprococcus_HB")

# Making lists to input results within
results_list <- list()

# Pull out all SNPs that are significant across all exposures
for(i in bugs){
  exposure <- paste("./data/Bugs/",i,".txt",sep="")
  exposure_dat <- read_exposure_data(exposure,sep="\t", snp_col = "rsid", beta_col = "beta", se_col = "se", pval_col = "P_value", eaf_col = "eaf", effect_allele_col = "allele_B", other_allele_col = "allele_A", samplesize_col = "n")
  exposure_dat$exposure <- i
  assign(paste("exp_meta_",i,sep=""),exposure_dat)
  results_list[[i]] <- assign(i,exposure_dat)
}
all_exposures <- do.call(rbind, results_list)
all_SNPs <- as.character(all_exposures$SNP)
all_SNPs <- as.data.frame(all_SNPs)
colnames(all_SNPs) <- "SNP"

# export this snplist as a table
# write.table(all_SNPs, "./data/bugs_snp_list.txt", row.names= F, col.names = T, quote = F, sep = '\t') 


################################
## READ In BCAC GWAS FILES AS OUTCOME DATA ##
################################
#NB: GWAS of breast cancer executed by zhang et al. 2020 using data from BCAC consortium 

#We downloaded the full BCAC outcome data from https://bcac.ccge.medschl.cam.ac.uk/bcacdata/icogs-complete-summary-results/
#In this analysis we are looking at Overall BC so use the Overall dataset saved as 'icogs_onco_gwas_meta_overall_breast_cancer_summary_level_statistics.txt'

#The data is large so preview before you read in and then you know you only need columns "SNP.iCOGs", "Effect.Meta", "Baseline.Meta", "Beta.meta", "sdE.meta"
BCAC_preview <- as.data.frame(fread("./data/icogs_onco_gwas_meta_overall_breast_cancer_summary_level_statistics.txt", nrows = 10))
names(BCAC_preview)

BCAC <- as.data.frame(fread("./data/icogs_onco_gwas_meta_overall_breast_cancer_summary_level_statistics.txt", 
                            select = c("SNP.iCOGs", "Effect.Meta", "Baseline.Meta", "Beta.meta", "sdE.meta", "Freq.Gwas", "EAFcases.iCOGs", "EAFcontrols.iCOGs", "EAFcontrols.Onco", "EAFcases.Onco")))

#calculate the eaf to use 
#weighted average of the contributing studies to the meta-analysis
BCAC$eaf <- (((BCAC$Freq.Gwas * 32498) + (BCAC$EAFcases.iCOGs * 38349) + (BCAC$EAFcontrols.iCOGs * 37818) + (BCAC$EAFcases.Onco * 80125) + (BCAC$EAFcontrols.Onco * 58383)) / 247173)

#see what columns are called
colnames(BCAC)
BCAC[1:10,]

#trim down
BCACtrim <- BCAC[,c(1,2,3,4,5,11)]
names(BCACtrim)
colnames(BCACtrim) <- c("snp.icogs", "effect.allele.outcome", "ref.allele.outcome", "beta.outcome", "se.outcome", "eaf.outcome")

#add sample size as described in 2020 paper methods supplementary table 4
BCACtrim$ncase <- as.numeric("133384") 
BCACtrim$ncontrol <- as.numeric("113789") 
BCACtrim$samplesize.outcome <- as.numeric("247173") 

head(BCACtrim)

#split the snp column to get just the rsid out of it 
BCACtrim[,10:13] <- str_split_fixed(BCACtrim$snp.icogs, ":", 4)
#preview the first ten rows
BCACtrim [1:10,]
#rename the rsid column
colnames(BCACtrim)[10] <- "rsid"
#preview the first ten rows
BCACtrim [1:10,]
#delete the last 3 columns
BCACtrim <- BCACtrim[,1:10]
#preview the first ten rows
BCACtrim [1:10,]

#NB there is no p-value column, infer from MR base, do not use the pvalues in the BCAC data, they are not really the GWAS pvalue

#output this new dataframe as a csv file
write.csv(BCACtrim, "./data/BCAC_overall_2020_trimmed.csv", sep = '/t', row.names = FALSE, col.names = TRUE, quote = FALSE) 

#Read back in once you have done the above steps before 
BCACtrim<- as.data.frame(fread("./data/BCAC_overall_2020_trimmed.csv"))
BCACtrim[1:10,]
names(BCACtrim)

outcome_data <- TwoSampleMR::format_data(BCACtrim, type = "outcome", snps = all_SNPs$SNP,
                                         snp_col = "rsid", beta_col = "beta.outcome", se_col = "se.outcome", 
                                         effect_allele_col = "effect.allele.outcome", other_allele_col = "ref.allele.outcome", 
                                         ncase_col = "ncase", ncontrol_col = "ncontrol", eaf_col = "eaf.outcome")

outcome_data[1:10,]

write.table(outcome_data, "./data/outcome_Data_OverallBC_Biome.txt", col.names = T, row.names = F, sep = '\t', quote = F)

##There is one missing snp, looked for a proxy in LD link then repeated the above for the proxy, this proxy is not in the BCAC overall data so we cannot get results for coporococcus

#If you want to use the exact outcome data used in the current paper you can download it at https://github.com/ge8793/Biome_Public/blob/main/outcome_Overall_BCAC_Microbiome.txt

rm(list=ls())

####################################################################################################
## RUNNING ANALYSES OF FGFP ABUNDANCES (EXPOSURE) AND BC (OUTCOME) USING ALL META-SUPPORTED SNPS ##
####################################################################################################
#Assign names to run analyses with
bugs <- c("C_Gammaproteobacteria_RNT","F_Sutterellaceae_HB","G_Bifidobacterium_RNT","G_Butyricicoccus_RNT","G_Dialister_HB","G_Parabacteroides_RNT",
          "G_Ruminococcus_HB","G_unclassified_F_Erysipelotrichaceae_HB","G_unclassified_F_Porphyromonadaceae_RNT","G_unclassified_O_Bacteroidales_HB","G_unclassified_P_Firmicutes_HB",
          "G_unclassified_P_Firmicutes_RNT","G_Veillonella_HB")

# Set the loop up for main analyses
# Making lists to input results within
results_list <- list()
het_results_list <- list()
pleio_results_list <- list()
dat_list <- list()

# Run the MR analyses
for(i in bugs){
  exposure <- paste("/Users/ge8793/OneDrive - University of Bristol/001_PROJECTS/Biome/data/Bugs/",i,".txt",sep="")
  exposure_dat <- read_exposure_data(exposure,sep="\t", snp_col = "rsid", beta_col = "beta", se_col = "se", pval_col = "P_value", eaf_col = "eaf", effect_allele_col = "allele_B", other_allele_col = "allele_A", samplesize_col = "n")
  exposure_dat$exposure <- i
  outcome_dat <- read_outcome_data("./data/outcome_Overall_BCAC_Microbiome.txt", sep="\t", snp_col = "SNP", beta_col = "beta.outcome", se_col = "se.outcome", pval_col = "pval.outcome", eaf_col = "eaf.outcome", effect_allele_col = "effect_allele.outcome", other_allele_col = "other_allele.outcome", phenotype_col = "outcome")
  outcome_dat$samplesize_col <-   247173
  outcome_dat$ncase_col <- 133384 
  outcome_dat$ncontrol_col <- 113789
  dat <- harmonise_data(exposure_dat, outcome_dat, action =2)
  name <- paste0(dat$exposure, dat$outcome)
  filepath = paste0("./analysis/", name, "harmonised_data.txt")
  write.table(dat, filepath, col.names = T, row.names = F, quote = F, sep = '\t')
  mr_results <- mr(dat, method_list=c("mr_wald_ratio","mr_ivw","mr_egger_regression","mr_weighted_median", "mr_weighted_mode"))
  
  # Outputting each MR result into results_list
  a <- cbind.data.frame(mr_results$exposure, mr_results$outcome,mr_results$nsnp,mr_results$method,mr_results$b,mr_results$se,mr_results$pval)
  name <- paste("res_",i,"_","overall_BC",sep="")
  results_list[[paste(i,"_","overall_BC",sep="")]] <- assign(name,a)
  dat_list[[paste(i,"_","overall_BC",sep="")]] <- assign(name,dat)
  rm(a,name)

}


##Add the prevalence to the binary phenotypes in the dat list from FGFP supplementary data

#C_Gammaproteobacteria_RNT
dat_list[1] #preview the data
dat_list[[1]]$Ncase.exp <- 1626
dat_list[[1]]$Ncontrol.exp <- 1626
dat_list[[1]]$samplesize.exposure <- 1626
dat_list[[1]]$prevalence <- 1

#F_Sutterellaceae_HB_overall_BC
dat_list[2]
dat_list[[2]]$Ncase.exp <- 2223*0.93
dat_list[[2]]$Ncontrol.exp <- 2223*0.07
dat_list[[2]]$samplesize.exposure <- 2223
dat_list[[2]]$prevalence <- 0.93

#G_Bifidobacterium_RNT_overall_BC
dat_list[3]
dat_list[[3]]$Ncase.exp <- 1975
dat_list[[3]]$Ncontrol.exp <- 1975
dat_list[[3]]$samplesize.exposure <- 1975
dat_list[[3]]$prevalence <- 1

#G_Butyricicoccus_RNT_overall_BC
dat_list[4]
dat_list[[4]]$Ncase.exp <- 2223
dat_list[[4]]$Ncontrol.exp <- 2223
dat_list[[4]]$samplesize.exposure <- 2223
dat_list[[4]]$prevalence <- 1

#G_Dialister_HB_overall_BC
dat_list[5]
dat_list[[5]]$Ncase.exp <- 2223*0.50
dat_list[[5]]$Ncontrol.exp <- 2223*0.50
dat_list[[5]]$samplesize.exposure <- 2223
dat_list[[5]]$prevalence <- 0.50

#G_Parabacteroides_RNT_overall_BC
dat_list[6]
dat_list[[6]]$Ncase.exp <- 2223
dat_list[[6]]$Ncontrol.exp <- 2223
dat_list[[6]]$samplesize.exposure <- 2223
dat_list[[6]]$prevalence <- 1

#G_Ruminococcus_HB_overall_BC
dat_list[7]
dat_list[[7]]$Ncase.exp <- 2223*0.94
dat_list[[7]]$Ncontrol.exp <- 2223*0.06
dat_list[[7]]$samplesize.exposure <- 2223
dat_list[[7]]$prevalence <- 0.94

#G_unclassified_F_Erysipelotrichaceae_HB_overall_BC
dat_list[8]
dat_list[[8]]$Ncase.exp <- 2223*0.47
dat_list[[8]]$Ncontrol.exp <- 2223*0.53
dat_list[[8]]$samplesize.exposure <- 2223
dat_list[[8]]$prevalence <- 0.47

#G_unclassified_F_Porphyromonadaceae_RNT_overall_BC
dat_list[9]
dat_list[[9]]$Ncase.exp <- 1420
dat_list[[9]]$Ncontrol.exp <- 1420
dat_list[[9]]$samplesize.exposure <- 1420
dat_list[[9]]$prevalence <- 1

#G_unclassified_O_Bacteroidales_HB_overall_BC
dat_list[10]
dat_list[[10]]$Ncase.exp <- 2223*0.19
dat_list[[10]]$Ncontrol.exp <- 2223*0.81
dat_list[[10]]$samplesize.exposure <- 2223
dat_list[[10]]$prevalence <- 0.19

#G_unclassified_P_Firmicutes_HB_overall_BC
dat_list[11]
dat_list[[11]]$Ncase.exp <- 2223*0.85
dat_list[[11]]$Ncontrol.exp <- 2223*0.15
dat_list[[11]]$samplesize.exposure <- 2223
dat_list[[11]]$prevalence <- 0.85

#G_unclassified_P_Firmicutes_RNT_overall_BC
dat_list[12]
dat_list[[12]]$Ncase.exp <- 1904
dat_list[[12]]$Ncontrol.exp <- 1904
dat_list[[12]]$samplesize.exposure <- 1904
dat_list[[12]]$prevalence <- 1

#G_Veillonella_HB_overall_BC
dat_list[13]
dat_list[[13]]$Ncase.exp <- 2223*0.27
dat_list[[13]]$Ncontrol.exp <- 2223*0.73
dat_list[[13]]$samplesize.exposure <- 2223
dat_list[[13]]$prevalence <- 0.27

# Merge all results files together and input into an Excel spreadsheet
all_results <- do.call(rbind, results_list)
rownames(all_results) <- NULL

write.table(all_results, "./analysis/mr_results_Biome_OverallBC.txt", row.names=F, col.names = T, quote = F, sep = "\t")

### Get the F-stats and R2 values for this analysis

F_list <- list()

## Calculate R2 for binary traits (for this we can use the get_r_from_lor function)
res <- all_results
full_dat <- rbindlist(dat_list)
res$exposure <- res$`mr_results$exposure`
res2 <- merge(res, full_dat, by = "exposure")
res2$prevalence <- 1
names(res2)
res2$R <- TwoSampleMR::get_r_from_lor(res2$beta.exposure, res2$eaf.exposure, res2$Ncase.exp, res2$Ncontrol.exp, res2$prevalence, model = "logit", correction = F)
res2$R2 <- res2$R^2
#R2*(N-1-k)/((1-r2)*k)
res2$F_stat<- (res2$R2*(res2$samplesize.exposure-1-1))/((1-res2$R2)*1)
write.table(res2, "./analysis/R2values_binary_overall.txt", row.names = F, col.names = T, quote = F, sep = '\t')

##Calculate R2 for continuous traits 
### For this, we use the equation R2 = 2*(b^2)*eaf*(1-eaf)/(2*(b^2)*eaf*(1-eaf)+(se^2)*(2*N)*eaf*(1-eaf)
### where b = beta of the SNP-exposure association, eaf = effect allele frequency of the SNP, se = standard error of the SNP-exposure association,
### N = sample size of the SNP-exposure GWAS

for(i in 1:length(dat_list)){
dat <- dat_list[[i]] #harmonization
eaf <- dat$eaf.exposure     
b <- dat$beta.exposure
se <- dat$se.exposure
p <- dat$pval.exposure
snp<- dat$SNP
N <- (dat$samplesize.exposure)
samplesize <- dat$samplesize.exposure
Ncontrols <- dat$ncontrol_col
Ncases <- dat$ncase_col
k<-1
dat$VG <- 2*(b^2)*eaf*(1-eaf)
dat$PV <- 2*(b^2)*eaf*(1-eaf) + ((se^2)*2*N*eaf*(1-eaf))
dat$R2 <- dat$VG/dat$PV
dat$Fstat = dat$R2*(N-1-k)/((1-dat$R2)*k)

#individual power calculation
sig<-0.05 #alpha
ratio<-Ncontrols/Ncases
hypothesised_b <- 0.1823216 #ln(OR) of 1.2 in cancer risk 
power<-pnorm(sqrt(N*dat$R2*(ratio/(1+ratio))*(1/(1+ratio)))*hypothesised_b-qnorm(1-sig/2))
dat$power <- paste0(power)
name <- paste0(dat_list[[i]]$exposure[1])
F_list[[paste(i, "_", dat_list[[i]]$exposure[1], sep = "")]] <- assign(name,dat)
filename <- paste0("./analysis/", name, "_","harmonised_data",".txt")
write.table(dat, file = filename, col.names = T, row.names = F, quote = FALSE, sep = "\t")
rm(name)
}

F_statistics <- rbindlist(F_list)
write.table(F_statistics, "./analysis/F_R2_Power_Continuoustraits_OverallBC.txt", col.names = T, row.names = F, quote = FALSE, sep = '\t')

##Equation used for R2 continuous traits 

#R2 = 2*(b^2)*eaf*(1-eaf)/(2*(b^2)*eaf*(1-eaf)+(se^2)*(2*N)*eaf*(1-eaf), where b = beta of the SNP-exposure association, eaf = effect allele frequency of the SNP, se = standard error of the SNP-exposure association and N = sample size of the SNP-exposure GWAS 
#F = R2*(N-1-k)/((1-r2)*k), where k is the number of SNPs
